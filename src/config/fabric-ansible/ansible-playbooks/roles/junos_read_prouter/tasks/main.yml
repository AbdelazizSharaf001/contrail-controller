---
    - name: Read Fabric namespace, update log
      job_objectlog:
        message: "Reading fabric namespace to get AS number."

    - name: get fabric namespaces for a tag
      vnc_db_mod:
         object_type: "fabric"
         object_op: "list"
         object_dict: |
           {
              "back_ref_id": "{{ prouter_uuid }}"
           }
         auth_token: "{{ auth_token }}"
      register: fabric_obj

    - set_fact:
        output: {
                  "status": "Failure",
                  "message": "{{fabric_obj.msg}}"
                }
      when: "'obj' not in fabric_obj or fabric_obj.failure == true"

    - name: Read failed, updating log
      job_objectlog:
        message: "Could not find the fabric with back_ref_id {{prouter_uuid}} in the DB."
      when: "'obj' not in fabric_obj or fabric_obj.failure == true"

    - meta: end_play
      when: "'obj' not in fabric_obj or fabric_obj.failure == true"
 
    - name: get fabric uuid
      set_fact:
          fabric_uuid: "{{ fabric_obj.obj.fabrics[0].uuid }}"
 
    - set_fact:
         tag_fq_name: "namespace=as_number"
 
    - name: create subfolders
      include_tasks: create_subfolders.yml
 
    - name: get fabric info
      include_role:
          name: fabric_namespace_read
